{"version":3,"file":"static/js/717.6e7197bf.chunk.js","mappings":"0KACe,SAASA,EAAMC,GAC5B,OAAIA,EACK,SAACC,GACNC,EAAAA,GAAMF,GAAMC,EAAK,CACfE,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAIP,SAACT,IACNC,EAAAA,EAAAA,IAAMD,EAAK,CACTE,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,O,uICrBX,SAASC,IACd,OAAOC,EAAAA,EAAAA,UACL,gBADa,iBAEb,oGACqBC,IAAAA,IAAU,kBAAkBC,MAAK,qBAAGC,QADzD,cACQA,EADR,yBAESA,GAFT,2CAIA,CACEC,UAAW,Q,wWCPV,SAASC,IACd,OAAOL,EAAAA,EAAAA,UACL,gBADa,iBAEb,oGACqBC,IAAAA,IAAU,iBAAiBC,MAAK,qBAAGC,QADxD,cACQA,EADR,yBAESA,GAFT,2CAIA,CACEC,UAAW,MAIV,SAASE,IACd,OAAON,EAAAA,EAAAA,UACL,eADa,iBAEb,oGACqBC,IAAAA,IAAU,gBAAgBC,MAAK,qBAAGC,QADvD,cACQA,EADR,yBAESA,GAFT,2CAIA,CACEC,UAAW,MAIV,SAASG,EAAT,GAA0C,IAAdC,EAAa,EAAbA,UAC3BC,GAAcC,EAAAA,EAAAA,kBACdC,GAAaxB,EAAAA,EAAAA,SAAM,SACzB,OAAOyB,EAAAA,EAAAA,cAAY,SAACT,GAAD,OAAUF,IAAAA,KAAW,UAAWE,KAAO,CACxDK,UAAW,WACTA,IACAC,EAAYI,kBAAkB,gBAEhCC,QAAS,SAACC,EAAOC,EAAWC,GAAa,IAAD,EACtCN,EAAU,UAACI,EAAMG,gBAAP,aAAC,EAAgBf,SAI1B,SAASgB,EAASC,GACvB,OAAOjC,EAAAA,EAAAA,SAAMiC,K,qGCvCR,SAASC,EAAUC,GACxB,IAAMC,GAAKC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,OAClB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOvB,EAAP,KAAawB,EAAb,KAWA,OAVAC,EAAAA,EAAAA,YAAU,WAQR,OAPAC,QAAQC,IAAI,IACZP,EAAGQ,QAAQC,GAAG,WAAW,WACvBT,EAAGQ,QAAQE,KAAKX,GAAO,GACvBC,EAAGQ,QAAQC,GAAGV,GAAO,SAACnB,GACpBwB,EAAQxB,SAGL,eACN,CAACoB,EAAID,IACDnB","sources":["hooks/Toast.js","hooks/api.js","hooks/index.js","hooks/io.js"],"sourcesContent":["import { toast } from \"react-toastify\";\nexport default function Toast(type) {\n  if (type) {\n    return (msg) => {\n      toast[type](msg, {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    };\n  } else {\n    return (msg) => {\n      toast(msg, {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    };\n  }\n}\n","import axios from \"axios\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nexport function useServiceInfo() {\n  return useQuery(\n    \"service-info\",\n    async () => {\n      const data = await axios.get(\"/microservices\").then(({ data }) => data);\n      return data;\n    },\n    {\n      staleTime: 60000,\n    }\n  );\n}\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport axios from \"axios\";\nimport Toast from \"./Toast\";\nexport function useDevicesInfo() {\n  return useQuery(\n    \"devices-info\",\n    async () => {\n      const data = await axios.get(\"/devices/info\").then(({ data }) => data);\n      return data;\n    },\n    {\n      staleTime: 60000,\n    }\n  );\n}\nexport function useModelsInfo() {\n  return useQuery(\n    \"models-info\",\n    async () => {\n      const data = await axios.get(\"/models/info\").then(({ data }) => data);\n      return data;\n    },\n    {\n      staleTime: 60000,\n    }\n  );\n}\nexport function useMutationModel({ onSuccess }) {\n  const queryClient = useQueryClient();\n  const errorToast = Toast(\"error\");\n  return useMutation((data) => axios.post(\"/models\", data), {\n    onSuccess: () => {\n      onSuccess();\n      queryClient.invalidateQueries(\"models-info\");\n    },\n    onError: (error, variables, context) => {\n      errorToast(error.response?.data);\n    },\n  });\n}\nexport function useToast(prop) {\n  return Toast(prop);\n}\nexport { useServiceInfo } from \"./api\";\nexport { useSocket } from \"./io\";\n","import { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nexport function useSocket(topic) {\n  const IO = useRef(io());\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    console.log(\"\");\n    IO.current.on(\"connect\", () => {\n      IO.current.emit(topic, true);\n      IO.current.on(topic, (data) => {\n        setData(data);\n      });\n    });\n    return () => {};\n  }, [IO, topic]);\n  return data;\n}\n"],"names":["Toast","type","msg","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","useServiceInfo","useQuery","axios","then","data","staleTime","useDevicesInfo","useModelsInfo","useMutationModel","onSuccess","queryClient","useQueryClient","errorToast","useMutation","invalidateQueries","onError","error","variables","context","response","useToast","prop","useSocket","topic","IO","useRef","io","useState","setData","useEffect","console","log","current","on","emit"],"sourceRoot":""}