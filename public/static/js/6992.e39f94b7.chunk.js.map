{"version":3,"file":"static/js/6992.e39f94b7.chunk.js","mappings":"oKACe,SAASA,EAAMC,GAC5B,OAAIA,EACK,SAACC,GACNC,EAAAA,GAAMF,GAAMC,EAAK,CACfE,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,KAIP,SAACT,IACNC,EAAAA,EAAAA,IAAMD,EAAK,CACTE,SAAU,gBACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,O,mLCpBX,SAASC,IACd,OAAOC,EAAAA,EAAAA,UACL,gBADa,iBAEb,oGACqBC,IAAAA,IAAU,kBAAkBC,MAAK,qBAAGC,QADzD,cACQA,EADR,yBAESA,GAFT,2CAIA,CACEC,UAAW,MAIV,SAASC,EAAT,GAAiD,IAAD,IAAxBC,UAAAA,OAAwB,MAAZ,aAAY,EAC/CC,GAAcC,EAAAA,EAAAA,kBACdC,GAAatB,EAAAA,EAAAA,SAAM,SACzB,OAAOuB,EAAAA,EAAAA,cACL,SAACP,GAAD,OACEF,IAAAA,IAAU,oBAAqB,CAC7BU,OAAQ,CACNC,GAAIT,OAGV,CACEG,UAAW,WACTA,IACAC,EAAYM,kBAAkB,iBAEhCC,QAAS,SAACC,EAAOC,EAAWC,GAAa,IAAD,EACtCR,EAAU,UAACM,EAAMG,gBAAP,aAAC,EAAgBf","sources":["hooks/Toast.js","hooks/api.js"],"sourcesContent":["import { toast } from \"react-toastify\";\nexport default function Toast(type) {\n  if (type) {\n    return (msg) => {\n      toast[type](msg, {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    };\n  } else {\n    return (msg) => {\n      toast(msg, {\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    };\n  }\n}\n","import axios from \"axios\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Toast from \"./Toast\";\nexport function useServiceInfo() {\n  return useQuery(\n    \"service-info\",\n    async () => {\n      const data = await axios.get(\"/microservices\").then(({ data }) => data);\n      return data;\n    },\n    {\n      staleTime: 60000,\n    }\n  );\n}\nexport function useProvision({ onSuccess = () => {} }) {\n  const queryClient = useQueryClient();\n  const errorToast = Toast(\"error\");\n  return useMutation(\n    (data) =>\n      axios.get(\"/devies/provision\", {\n        params: {\n          id: data,\n        },\n      }),\n    {\n      onSuccess: () => {\n        onSuccess();\n        queryClient.invalidateQueries(\"devices-info\");\n      },\n      onError: (error, variables, context) => {\n        errorToast(error.response?.data);\n      },\n    }\n  );\n}\n"],"names":["Toast","type","msg","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","useServiceInfo","useQuery","axios","then","data","staleTime","useProvision","onSuccess","queryClient","useQueryClient","errorToast","useMutation","params","id","invalidateQueries","onError","error","variables","context","response"],"sourceRoot":""}