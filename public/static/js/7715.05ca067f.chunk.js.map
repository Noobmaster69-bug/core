{"version":3,"file":"static/js/7715.05ca067f.chunk.js","mappings":"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","sources":["pages/Task/DataCollection.js","pages/Task/TaskDetail.js","webpack://ms-ui/./src/pages/Task/DataCollection.module.scss?277a","pages/Task/TaskDetail.module.scss"],"sourcesContent":["import { useDevicesInfo, useTask } from \"hooks\";\r\nimport { BsInfoCircle } from \"react-icons/bs\";\r\nimport { AiOutlineDelete } from \"react-icons/ai\";\r\nimport Table from \"components/Tables\";\r\nimport { useState } from \"react\";\r\nimport TaskDetail from \"./TaskDetail\";\r\nimport { Link } from \"react-router-dom\";\r\nimport style from \"./DataCollection.module.scss\";\r\nimport NewTask from \"./NewTask\";\r\nexport default function DataCollection() {\r\n  const [select, setSelect] = useState([]);\r\n  const tasks = useTask(null);\r\n  const devices = useDevicesInfo(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [channels, setChannels] = useState(null);\r\n  const [newTask, setNewTask] = useState(false);\r\n  const tableHead = [\r\n    {\r\n      id: \"id\",\r\n      numberic: false,\r\n      label: \"taskID\",\r\n    },\r\n    {\r\n      id: \"device\",\r\n      numberic: false,\r\n      label: \"Device Name\",\r\n    },\r\n    {\r\n      id: \"type\",\r\n      numberic: false,\r\n      label: \"Task ID\",\r\n    },\r\n    {\r\n      id: \"interval\",\r\n      numberic: true,\r\n      label: \"Interval\",\r\n    },\r\n    {\r\n      id: \"channels\",\r\n      numberic: false,\r\n      isSort: false,\r\n      label: \"Channels\",\r\n    },\r\n    {\r\n      id: \"delete\",\r\n      numberic: false,\r\n      isSort: false,\r\n      label: \"\",\r\n    },\r\n  ];\r\n  const tableBody = (tasks?.data || []).map((task, index) => {\r\n    return {\r\n      id: {\r\n        value: task.id,\r\n        key: task.id,\r\n      },\r\n      device: {\r\n        value: (devices?.data ? devices?.data : []).find(\r\n          (e) => e.id === task.DeviceID\r\n        )?.name,\r\n        key: (devices?.data ? devices?.data : []).find(\r\n          (e) => e.id === task.DeviceID\r\n        )?.name,\r\n      },\r\n      type: {\r\n        value: task.scheduleType,\r\n        key: task.scheduleType,\r\n      },\r\n      interval: {\r\n        value: task.interval,\r\n        key: task.interval,\r\n      },\r\n      channels: {\r\n        value: (\r\n          <BsInfoCircle\r\n            onClick={() => {\r\n              setOpen(true);\r\n              setChannels(task);\r\n            }}\r\n          />\r\n        ),\r\n        key: task.id,\r\n      },\r\n      delete: {\r\n        value: <AiOutlineDelete size={25} />,\r\n        key: task.id,\r\n      },\r\n    };\r\n  });\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.buttonHolder}>\r\n        <div className={style.createButton} onClick={() => setNewTask(true)}>\r\n          + Create\r\n        </div>\r\n      </div>\r\n      <Table head={tableHead} select={[select, setSelect]} data={tableBody} />\r\n      {tasks !== null && (\r\n        <TaskDetail\r\n          data={channels}\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n        />\r\n      )}\r\n      <NewTask open={newTask} onClose={() => setNewTask(false)} />\r\n    </div>\r\n  );\r\n}\r\n","import Popup from \"reactjs-popup\";\r\nimport { useState } from \"react\";\r\nimport style from \"./TaskDetail.module.scss\";\r\nimport Table from \"components/Tables\";\r\nimport { useDevicesInfo, useModelsInfo } from \"hooks\";\r\nexport default function TaskDetail({ trigger, data, open = false, onClose }) {\r\n  const [select, setSelect] = useState([]);\r\n  const devices = useDevicesInfo();\r\n  const models = useModelsInfo();\r\n  function isNumber(value) {\r\n    return typeof value === \"number\" && isFinite(value);\r\n  }\r\n  const device = (devices?.data ? devices.data : []).find(\r\n    (e) => e?.id === data?.DeviceID\r\n  );\r\n  const model = (models?.data ? models.data : []).find(\r\n    (e) => e?.id === device?.ModelID\r\n  );\r\n  const channels = (model?.ModelChannels || [])\r\n    .filter((channel) =>\r\n      data.ReadDeviceData.some((e) => e?.ChannelID === channel.id)\r\n    )\r\n    .map((e) => ({ ...e }));\r\n\r\n  const tableHead = channels.length\r\n    ? Object.keys(channels[0]).map((e) => ({\r\n        id: e,\r\n        numberic: isNumber(channels[0][e]),\r\n        label: e,\r\n      }))\r\n    : [];\r\n  const tableBody = channels.map((channel) =>\r\n    Object.keys(channel).reduce(\r\n      (object, value) => ({\r\n        ...object,\r\n        [value]: { value: channel[value], key: channel[value] },\r\n      }),\r\n      {}\r\n    )\r\n  );\r\n  return (\r\n    <Popup\r\n      trigger={trigger}\r\n      modal\r\n      contentStyle={{ backgroundColor: \"white\", borderRadius: \"20px\" }}\r\n      open={open}\r\n      onClose={onClose}\r\n    >\r\n      {(close) => (\r\n        <div className={style.container}>\r\n          <Table\r\n            head={tableHead}\r\n            select={[select, setSelect]}\r\n            data={tableBody}\r\n            // classes={{\r\n            //   head: { name: style.head, default: true },\r\n            // }}\r\n          />\r\n          <div onClick={() => close()} className={style.footer}>\r\n            Close\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Popup>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DataCollection_container__TD-Hs\",\"buttonHolder\":\"DataCollection_buttonHolder__GbJHx\",\"createButton\":\"DataCollection_createButton__wsiWw\"};","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["DataCollection","useState","select","setSelect","tasks","useTask","devices","useDevicesInfo","open","setOpen","channels","setChannels","newTask","setNewTask","tableBody","data","map","task","index","id","value","key","device","find","e","DeviceID","name","type","scheduleType","interval","onClick","delete","size","className","style","head","numberic","label","isSort","onClose","TaskDetail","trigger","models","useModelsInfo","model","ModelID","ModelChannels","filter","channel","ReadDeviceData","some","ChannelID","tableHead","length","Object","keys","isFinite","reduce","object","modal","contentStyle","backgroundColor","borderRadius","close"],"sourceRoot":""}